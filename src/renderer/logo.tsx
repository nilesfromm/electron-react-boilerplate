/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF, Edges } from '@react-three/drei';
import logo from '../../assets/globe.glb';
import { useFrame } from '@react-three/fiber';

console.log(logo);

function Model(props) {
  const logoRef = useRef<THREE.Mesh>(null!);
  const { nodes, materials } = useGLTF(logo);
  useFrame((state, delta) => (logoRef.current.rotation.y += delta / 2));
  console.log(nodes);
  return (
    <group {...props} dispose={null} ref={logoRef}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Curve005.geometry}
        // rotation={[Math.PI / 2, 0, 0]}
        scale={[2.25, 2, 2.25]}
      >
        <meshStandardMaterial transparent opacity={0.75} color={'black'} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Curve001.geometry}
        // rotation={[Math.PI / 2, 0, 0]}
        scale={[2.25, 2, 2.25]}
      >
        <meshStandardMaterial color={'coral'} />
      </mesh>
      {/* <lineSegments scale={[100, 100, 100]} rotation={[Math.PI / 2, 0, 0]}>
        <edgesGeometry args={[nodes.Curve001.geometry]} />
        <lineBasicMaterial color={'coral'} />
      </lineSegments> */}
    </group>
  );
}

useGLTF.preload(logo);

export default Model;
